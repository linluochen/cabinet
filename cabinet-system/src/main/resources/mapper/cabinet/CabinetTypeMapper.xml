<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tools.cabinet.mapper.CabinetTypeMapper">

    <resultMap type="CabinetType" id="CabinetTypeResult">
        <result property="id" column="id"/>
        <result property="parentId" column="parent_id"/>
        <result property="name" column="name"/>
        <result property="createTime" column="create_time"/>
        <result property="createName" column="create_name"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateName" column="update_name"/>
    </resultMap>

    <sql id="selectCabinetTypeVo">
        select id, parent_id, name, create_time, create_name, update_time, update_name
        from cabinet_type
    </sql>

    <select id="selectCabinetTypeList" parameterType="CabinetType" resultMap="CabinetTypeResult">
        <include refid="selectCabinetTypeVo"/>
        <where>
            <if test="parentId != null ">and parent_id = #{parentId}</if>
            <if test="name != null  and name != ''">and name like concat('%', #{name}, '%')</if>
            <if test="createName != null  and createName != ''">and create_name like concat('%', #{createName}, '%')
            </if>
            <if test="updateName != null  and updateName != ''">and update_name like concat('%', #{updateName}, '%')
            </if>
        </where>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
        order by parent_id
    </select>

    <select id="selectCabinetTypeById" parameterType="Long" resultMap="CabinetTypeResult">
        <include refid="selectCabinetTypeVo"/>
        where id = #{id}
    </select>

    <insert id="insertCabinetType" parameterType="CabinetType" useGeneratedKeys="true" keyProperty="id">
        insert into cabinet_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="parentId != null">parent_id,</if>
            <if test="name != null">name,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createName != null">create_name,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateName != null">update_name,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="parentId != null">#{parentId},</if>
            <if test="name != null">#{name},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createName != null">#{createName},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="updateName != null">#{updateName},</if>
        </trim>
    </insert>

    <update id="updateCabinetType" parameterType="CabinetType">
        update cabinet_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="name != null">name = #{name},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createName != null">create_name = #{createName},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateName != null">update_name = #{updateName},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCabinetTypeById" parameterType="Long">
        delete
        from cabinet_type
        where id = #{id}
    </delete>

    <delete id="deleteCabinetTypeByIds" parameterType="String">
        delete from cabinet_type where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>